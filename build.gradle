/*
 * This file was generated by the Gradle 'init' task.
 */

import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'maven-publish'
}

project.ext.imguiVersion = "1.77-0.17.2"
switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        break
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://jcenter.bintray.com/')
    }

    maven {
        url = uri('http://repo.maven.apache.org/maven2')
    }
}

dependencies {
    compile group: "com.quartzy", name: "OpenGlEngine", version: "1.0-SNAPSHOT"
    annotationProcessor group: "com.quartzy", name: "OpenGlEngine", version: "1.0-SNAPSHOT"
    compile 'com.google.code.gson:gson:2.8.6'
    compile group: 'io.imgui.java', name: "binding", version: imguiVersion
    compile group: 'io.imgui.java', name: "lwjgl3", version: imguiVersion
    compile group: 'io.imgui.java', name: lwjglNatives, version: imguiVersion
}

group = 'com.quartzy'
version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

task farJar(type: Jar){
    manifest {
        attributes 'Implementation-Title': 'OpenGlEngine scene editor',
            'Implementation-Version': archiveVersion,
            'Main-Class': 'com.quartzy.engine.Client'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it)}}
    with jar
}
